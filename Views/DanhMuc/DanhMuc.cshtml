﻿@{ ViewBag.Title = "OPC Bao Cao | OPCPHARMA";
    
}
@using System.Data;
<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="UTF-8">
    <title> OPC Bao Cao | OPCPHARMA </title>
    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>
    <link href="~/Styles/main.css" rel='stylesheet' type='text/css' media="all">
    @*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">*@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" />
    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="~/Styles/loader.css">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <style>
        body {
            font-family: 'Helvetica Neue', Helvetica, sans-serif;
            margin: 0;
            padding: 0;
            text-align: center;
        }

        .collapsed {
            display: none;
        }

        .contentList {
            display: none;
        }

        .tabs {
            display: inline-block;
            /* bottom: 0;
            left: 0;
            right: 0;*/
            width: 300vh;
            height: 50px;
            /* margin: 15px auto;*/
            border-bottom: 1px solid #DAE0E7;
            background: #F9F9F9;
            list-style-type: none;
            padding: 0px 12px 0;
        }

        a {
            text-decoration: none;
            color: #333;
        }

        /*.tab {
            float: left;
            height: 44px;
            margin: 0 8px -1px 0;
            border: 1px solid #DAE0E7;
            background: #F9F9F9;
            border-radius: 0px 0px 0 0;
            overflow: hidden;
        }

            .tab, .tab a {
                transition: all .25s;
            }

                .tab a {
                    display: inline-block;
                }

                    .tab a:first-child {
                        padding: 12px 2px 12px 16px;
                        white-space: nowrap;
                    }

                .tab.tabClosed, .tab.tabClosed a:first-child {
                    margin-right: 0;
                    border-width: 0;
                }

                .tab.tabClosed {
                    width: 0 !important;*/ /* use important because we need to set the width of tabs in javascript in order to be able to animate them to 0 */
        /*}

                    .tab.tabClosed a {
                        opacity: 0;
                    }

        .closeTab:hover {
            background: #DAE0E7;
        }

        .tab-control {
            z-index: 100;
            position: fixed;
        }

            .tab-control ul {
                position: absolute;
                bottom: 0px;*/
        /* left:300px;*/
        /*}

                .tab-control ul li {
                    text-align: center;
                }*/
        /* Thêm lớp selected-tab vào tab đã chọn */
        /*.tab.selected-tab {
            background-color: #3763a3;*/ /* Màu nền của tab */
        /*}

            .tab.selected-tab a {
                color: white*/ /* Màu nền của tab */
        /*}

        .selected-tab {
            background-color: #007bff;*/ /* Màu sắc của tab khi được chọn */
        /*color: #fff;*/ /* Màu văn bản của tab khi được chọn */
        /*}*/

        /* Đảm bảo các tab khác không được chọn có màu sắc mặc định */
        /*.tab:not(.selected-tab) {
            background-color: #f8f9fa;*/ /* Màu sắc mặc định của tab */
        /*color: #000;*/ /* Màu văn bản mặc định của tab */
        /*}*/
        div.fixed {
            color: black;
            position: fixed;
            bottom: 0;
            right: 0;
            width: 400px;
            background-color: white;
            border: 3px solid #11101d;
        }

        .sidebar .nav-links li ul {
            background-color: #427cac;
        }

        #active {
            background-color: #427cac;
        }
    </style>
</head>
<body style="background-color: #e0e8ee">
    <div class="loader" style="z-index:1"></div>
    <div class="sidebar close" style="background-color: #3f5161; color: #3483bd ">
        <div class="logo-details">
            <img src="~/Images/opc.png" style="height:50px;width:50px;margin-left:10px">
            <span class="logo_name" style="color: #da261f; font-family: 'Agency FB'; font-size: 40px;padding-left:10px">OPC</span>
        </div>
        <ul class="nav-links">
            <li>
                <a href="/Home/About">
                    <i class='bx bx-grid-alt'></i>
                    <span class="link_name">Trang chủ</span>
                </a>
                <ul class="sub-menu blank">
                    <li><a class="link_name" href="#">Trang chủ</a></li>
                </ul>
            </li>
            <li id="active">
                <div class="iocn-link">
                    <a href="/DanhMuc/DanhMuc">
                        <i class='bx bx-collection'></i>
                        <span class="link_name">Danh mục</span>
                    </a>
                    <ul class="sub-menu blank">
                        <li><a class="link_name" href="/DanhMuc/DanhMuc">Danh mục</a></li>
                    </ul>
                    @*<i class='bx bxs-chevron-down arrow'></i>*@
                </div>

                <ul class="sub-menu">
                    <li><a class="link_name" href="#">Danh mục</a></li>
                    <li class="liTitle">
                        @if (string.Equals(ViewBag.UserName, "admin", StringComparison.OrdinalIgnoreCase) ||
string.Equals(ViewBag.UserName, "opcmar001", StringComparison.OrdinalIgnoreCase))
                        {


                            <a href="/DanhMuc/ViewDanhMucKH_Fill" onclick="runReport()"> Khách hàng</a>
                        }
                        else if (string.Equals(ViewBag.UserName, "OPCHCM001", StringComparison.OrdinalIgnoreCase))
                        {


                            <a href="/DanhMuc/ViewDanhMucKH_FillCN" onclick="runReport()"> Khách hàng</a>
                        }
                        else
                        {
                            <a href="/DanhMuc/ViewDanhMucKHCN" onclick="runReport()"> Khách hàng</a>
                        }

                    </li>

                </ul>
            </li>
            <li>
                <div class="iocn-link">
                    <a href="/Home/MauIn">
                        <i class='bx bxs-printer'></i>
                        <span class="link_name">Mẫu In</span>
                    </a>

                </div>
                <ul class="sub-menu">
                    <li><a class="link_name" href="/Home/MauIn">Mẫu In</a></li>
                    <li class="liTitle"><a href="/MauInChungTu/MauInNLCB_Fill">1.Chứng Từ Phiếu Nhập</a></li>
                    <li class="liTitle"><a href="/MauInChungTu/PhieuNhapXNTT_Fill">2.Phiếu Xác Nhận Thanh Toán</a></li>
                    <li class="liTitle"><a href="/MauInChungTu/PhieuXuatKho_SO">3.Phiếu Xuất Kho</a></li>
                    <li class="liTitle"><a href="/MauInChungTu/ThongBaoNoQH_Fill">4.Thông Báo Nợ QH</a></li>
                    <li class="liTitle"><a href="/MauInChungTu/BangDoiChieuCongNo_Fill">5.Bảng Đối Chiếu Công Nợ</a></li>
                    @*<li><a href="#">Login Form</a></li>
                        <li><a href="#">Card Design</a></li>*@
                </ul>
            </li>

            <li class="report-li">
                <div class="iocn-link">
                    <a href="/Home/MainBaoCao" onclick="showLoader()">
                        <i class='bx bx-plug'></i>
                        <span class="link_name">Báo cáo</span>
                    </a>
                    @*<i class='bx bxs-chevron-down arrow'></i>*@
                </div>
                <ul class="sub-menu">
                    <li><a class="link_name" href="/Home/MainBaoCao">Báo Cáo</a></li>
                    <li>
                        <a href="#">1.Báo Cáo Quản Trị</a>
                        <ul>
                            @if (string.Equals(ViewBag.UserName, "admin", StringComparison.OrdinalIgnoreCase))
                            {


                                <li class="liTitle"><a href="/DoanhThuChiNhanh/DoanhThuChiNhanhKGam_Fill">1.1.Doanh Thu Chi Nhánh</a></li>
                            }
                            else
                            {
                                <li class="liTitle"><a href="/DoanhThuChiNhanh/DoanhThuChiNhanhKGam_CN_Fill">1.1.Doanh Thu Chi Nhánh</a></li>
                            }
                            @if (string.Equals(ViewBag.UserName, "admin", StringComparison.OrdinalIgnoreCase))
                            {


                                <li class="liTitle"><a href="/DoanhThuChiNhanh/DoanhThuChiNhanh_Admin_Fill">1.2.Doanh Thu Chi Nhánh Theo Gam</a></li>
                            }
                            else
                            {
                                <li class="liTitle"><a href="/DoanhThuChiNhanh/DoanhThuChiNhanh_Fill">1.2.Doanh Thu Chi Nhánh Theo Gam</a></li>
                            }

                            <li class="liTitle"><a href="/DoanhThuChiNhanh/DoanhThuChiNhanhTinhLuong_Fill">1.3.Doanh Thu Chi Nhánh Tính Lương</a></li>

                        </ul>
                    </li>

                    <li>
                        <a href="#">2.Báo Cáo Nghiệp Vụ</a>
                        <ul>
                            <li class="liTitle"><a href="/bangkehoadon/bangkehoadon_Fill">2.1.Bảng Kê Chứng Từ SO</a></li>
                            <li class="liTitle"><a href="/BaoCaobanHangCN/BaoCaoBanHangCN_Fill">2.2.Báo Cáo Bán Hàng CN</a></li>
                            <li class="liTitle"><a href="/BaoCaoBanHangTDV/BaoCaoBanHangTDV_Fill">2.3.Báo Cáo Bán Hàng TDV</a></li>
                            <li class="liTitle"><a href="/BaoCaoTienVeCN/BaoCaoTienVeCN_Fill">2.4.Báo Cáo Tiền Về CN</a></li>
                            <li class="liTitle"><a href="/BaoCaoTienVeCN/BaoCaoTienVeTDV_Fill">2.5.Báo Cáo Tiền Về TDV</a></li>
                            <li class="liTitle"><a href="/BaoCaoDoanhThuGamHangTheoDoiTuong/BaoCaoDoanhThuGamHangTheoDoiTuong_Fill">2.6.Doanh Thu Gam Theo Đối Tượng</a></li>
                        </ul>
                    </li>


                    <!-- Thêm các mục con khác của submenu "Báo cáo nghiệp vụ" nếu cần -->
                </ul>
            </li>



            <li>
                <a href="/Home/DoiMatKhau">
                    <i class='bx bx-cog'></i>
                    <span class="link_name">Đổi mật khẩu</span>
                </a>
                <ul class="sub-menu blank">
                    <li><a class="link_name" href="/home/DoiMatKhau">Đổi mật khẩu</a></li>
                </ul>
            </li>




            <li onclick="logout()">
                <a>
                    <i class='bx bx-log-out'></i>
                    <span class="link_name">Đăng xuất</span>
                </a>
                <ul class="sub-menu blank">
                    <li><a class="link_name">Đăng xuất</a></li>
                </ul>
            </li>
        </ul>
    </div>
    <section class="home-section" style="background-color: #e0e8ee">
        <nav>
            <div class="home-content">
                <i class='bx bx-menu'></i>
                <span class="text">Danh Mục</span>
            </div>
            <div class="search-box">
                <input type="text" placeholder="Search...">
                <i class='bx bx-search'></i>
            </div>
        </nav>
        <div class="home-content">
            @*phân quyền user*@
            @if (string.Equals(ViewBag.UserName, "admin", StringComparison.OrdinalIgnoreCase) ||
             string.Equals(ViewBag.UserName, "opcmar001", StringComparison.OrdinalIgnoreCase))
            {
                <div class="box-container">
                    <div class="box-row-1">
                        <h3>Danh Mục Khách Hàng</h3>


                    </div>
                    <div class="box-row-2">
                        <a class="button" href="/DanhMuc/ViewDanhMucKH_Fill" onclick="runReport()"><span>Xem</span></a>
                    </div>
                </div> }
            else if (string.Equals(ViewBag.UserName, "OPCHCM001", StringComparison.OrdinalIgnoreCase))
            {
                <div class="box-container">
                    <div class="box-row-1">
                        <h3>Danh Mục Khách Hàng</h3>


                    </div>
                    <div class="box-row-2">
                        <a class="button" href="/DanhMuc/ViewDanhMucKH_FillCN"><span>Xem</span></a>
                    </div>
                </div> }
            else
            {
                <div class="box-container">
                    <div class="box-row-1">
                        <h3>Danh Mục Khách Hàng</h3>
                    </div>
                    <div class="box-row-2">
                        <a class="button" href="/DanhMuc/ViewDanhMucKHCN"><span>Xem</span></a>
                    </div>
                </div>
            }


            <div class="box-container">
                <div class="box-row-1">
                    <h3>Danh Mục Han Mức CTV</h3>
                </div>
                <div class="box-row-2">
                    <a class="button" href="/CongTacVien/Index" target="_blank"><span>Xem</span></a>
                </div>
            </div>

            <div class="box-container">
                <div class="box-row-1">
                    <h3>Theo Dõi Giao Hàng</h3>
                </div>
                <div class="box-row-2">
                    <a class="button" href="/TheoDoiGiaoHang/Index" target="_blank"><span>Xem</span></a>
                </div>
            </div>
        </div>
    </section>
    @*<div class="tab-control">
            <ul class="tabs" style="background-color: #1d1b31; bottom: 0; left: 0; right: 0;">
                <li class="tab selected" style="padding-right:10px"><a href="#">Home</a></li>
            </ul>
        </div>*@
    <script>
        function logout() {
            window.location.href = "/home/login"
        }
        document.getElementById("TOP1").innerHTML = Response.innerHTML.g;

        $("#leftside-navigation .sub-menu > a").click(function (e) {
            $("#leftside-navigation ul ul").slideUp(), $(this).next().is(":visible") || $(this).next().slideDown(),
                e.stopPropagation()
        })
        function ChangPassword() {
            window.location.href = "/home/DoiMatKhau"
        }
    </script>

    <script>
        let reportLi = document.querySelector(".report-li");
        reportLi.addEventListener("click", (e) => {
            console.log("Clicked on report-li");
            let subMenu = e.currentTarget.querySelector(".sub-menu");
            subMenu.classList.toggle("showSubMenu");
        });

        let arrow = document.querySelectorAll(".arrow");
        for (var i = 0; i < arrow.length; i++) {
            arrow[i].addEventListener("click", (e) => {
                let arrowParent = e.target.parentElement.parentElement; // selecting main parent of arrow
                arrowParent.classList.toggle("showMenu");
            });
        }

        let sidebar = document.querySelector(".sidebar");
        let sidebarBtn = document.querySelector(".bx-menu");
        console.log(sidebarBtn);
        sidebarBtn.addEventListener("click", () => {
            sidebar.classList.toggle("close");
        });
    </script>

    <script>

        //function showLoader() {
        //    const loader = document.querySelector(".loader");
        //    loader.classList.remove("loader-hidden");
        //}

        //// Function to hide the loader
        //function hideLoader() {
        //    const loader = document.querySelector(".loader");
        //    loader.classList.add("loader-hidden");
        //}



        window.addEventListener("load", () => {
            // Hide the loader after the page is loaded
            hideLoader();
        });
    </script>
    <script>
        function runReport() {
            // Hiển thị thẻ span có id là "spanText"
            showLoader();
            const spanElement = document.getElementById("spanText");
            spanElement.style.display = "block";
        }
    </script>
    <script>
        window.onload = function () {
            var username = localStorage.getItem("username");
            if (username) {
                var nameInput = document.getElementById("Name");
                if (nameInput) {
                    nameInput.value = username;
                }
                localStorage.removeItem("username");
            }

        };
    </script>
    <script>
        function showLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.remove("loader-hidden");
        }
        function hideLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.add("loader-hidden");
            createChart(chartData);
        }
        window.addEventListener("load", () => {
            hideLoader();
            applyCheckboxAndColumnState();
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const subMenuLinks = document.querySelectorAll(".liTitle a");
            const tabControlTabs = document.querySelector(".tab-control .tabs");

            // Mảng để lưu các tab
            const tabsArray = JSON.parse(localStorage.getItem("tabsArray")) || [];
            const currentTabTitleView1 = localStorage.getItem("currentTabView1"); // Sử dụng biến "currentTabView1" cho View 1

            subMenuLinks.forEach(function (subMenuLink) {
                subMenuLink.addEventListener("click", function (event) {
                    event.preventDefault();

                    const tabTitle = subMenuLink.textContent;
                    const subMenuLinkHref = subMenuLink.getAttribute("href");

                    // Kiểm tra xem tab đã tồn tại trong mảng hay chưa
                    const tabExists = tabsArray.some(tab => tab.title === tabTitle);

                    // Nếu tab chưa tồn tại, thêm nó vào mảng
                    if (!tabExists) {
                        tabsArray.push({ title: tabTitle, href: subMenuLinkHref });
                        localStorage.setItem("tabsArray", JSON.stringify(tabsArray));
                    }

                    // Thêm tab vào giao diện
                    const newTab = document.createElement("li");
                    newTab.classList.add("tab", "selected");
                    newTab.innerHTML = `
                                                            <a href="${subMenuLinkHref}">${tabTitle}</a>
                                                            <a class="closeTab" href="">✕</a>
                                                        `;
                    tabControlTabs.appendChild(newTab);

                    // Chuyển view tới thẻ li tương ứng
                    if (subMenuLinkHref) {
                        // Lưu trạng thái hiện tại vào Local Storage trước khi chuyển trang
                        localStorage.setItem("currentTabView1", tabTitle); // Sử dụng biến "currentTabView1" cho View 1
                        localStorage.setItem("currentTabHrefView1", subMenuLinkHref); // Sử dụng biến "currentTabHrefView1" cho View 1
                        window.location.href = subMenuLinkHref;
                    }
                });
            });

            // Cập nhật tab hiện tại trong view 1 (nếu có)
            if (currentTabTitleView1) {
                const currentTab = document.createElement("li");
                currentTab.classList.add("tab", "selected");
                const tabInfo = JSON.parse(localStorage.getItem(currentTabTitleView1));
                currentTab.innerHTML = `
                                                        <a href="${tabInfo.href}">${currentTabTitleView1}</a>
                                                        <a class="closeTab" href="">✕</a>
`;
                tabControlTabs.appendChild(currentTab);
            }

            // Xử lý sự kiện khi người dùng nhấp vào nút đóng tab
            // Xử lý sự kiện khi người dùng nhấp vào nút đóng tab
            document.addEventListener("click", function (event) {
                if (event.target.classList.contains("closeTab")) {
                    event.preventDefault();

                    const tabTitle = event.target.previousElementSibling.textContent;

                    // Tìm tab cần xóa trong mảng và lấy chỉ số của nó
                    const tabIndex = tabsArray.findIndex(tab => tab.title === tabTitle);

                    if (tabIndex !== -1) {
                        // Xóa tab khỏi mảng
                        tabsArray.splice(tabIndex, 1);
                        localStorage.setItem("tabsArray", JSON.stringify(tabsArray));
                    }

                    // Xóa tab khỏi giao diện và cập nhật lại thanh tab
                    const tabToRemove = event.target.parentElement;
                    tabToRemove.remove();

                    // Kiểm tra nếu không còn tab nào thì chuyển về trang Home
                    if (tabsArray.length === 0) {
                        window.location.href = "#"; // Thay đổi dấu "#" thành đường dẫn tới trang Home nếu có
                    } else {
                        // Nếu còn tab, chuyển về tab cuối cùng trong danh sách
                        const lastTab = tabsArray[tabsArray.length - 1];
                        window.location.href = lastTab.href;
                    }
                }
            });


            // Sự kiện khi người dùng nhấp vào tab "Home" để quay lại View 1
            const homeTab = tabControlTabs.querySelector("a[href='#']");
            homeTab.addEventListener("click", function (event) {
                event.preventDefault();
                const currentTabHrefView1 = localStorage.getItem("currentTabHrefView1"); // Sử dụng biến "currentTabHrefView1" cho View 1
                if (currentTabHrefView1) {
                    window.location.href = currentTabHrefView1;
                }
            });

            hideLoader();
        });

    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const tabControlTabs = document.querySelector(".tab-control .tabs");

            // Mảng để lưu các tab
            let tabsArray = JSON.parse(localStorage.getItem("tabsArray")) || [];

            // Lặp qua mảng tabsArray để tạo các tab
            tabsArray.forEach(function (tabInfo, index) {
                const tabTitle = tabInfo.title;
                const tabHref = tabInfo.href;

                // Tạo tab và thêm vào giao diện
                const newTab = document.createElement("li");
                newTab.classList.add("tab", "selected");
                newTab.innerHTML = `
                                                    <a href="${tabHref}">${tabTitle}</a>
                                                    <a class="closeTab" href="">✕</a>
                                                    `;
                tabControlTabs.appendChild(newTab);

                // Sự kiện khi người dùng nhấp vào nút đóng tab
                newTab.querySelector(".closeTab").addEventListener("click", function (event) {
                    event.preventDefault();
                    closeTabAndNavigate(tabTitle, index); // Truyền chỉ số index vào hàm
                });
            });

            hideLoader();
        });

        // Hàm để xóa tab và chuyển đến view gần nhất (nếu có) hoặc trang Home
        function closeTabAndNavigate(tabTitle, tabIndex) {
            const tabsArray = JSON.parse(localStorage.getItem("tabsArray")) || [];

            // Lọc ra tab cần đóng dựa trên chỉ số tabIndex và cập nhật lại tabsArray
            if (tabIndex >= 0 && tabIndex < tabsArray.length) {
                tabsArray.splice(tabIndex, 1);
                localStorage.setItem("tabsArray", JSON.stringify(tabsArray));
            }

            // Xóa tab khỏi giao diện và cập nhật lại thanh tab
            const tabControlTabs = document.querySelector(".tab-control .tabs");

            // Lặp qua danh sách tab để tìm tab cần xóa
            for (let i = 0; i < tabControlTabs.children.length; i++) {
                const tab = tabControlTabs.children[i];
                if (tab.querySelector("a").textContent === tabTitle) {
                    tab.remove();
                    break;
                }
            }

            // Kiểm tra nếu không còn tab nào, chuyển về trang Home
            //if (tabsArray.length === 0) {
            //    window.location.href = "/Home/About"; // Thay đổi dấu "#" thành đường dẫn tới trang Home nếu có
            //} else {
            //    // Nếu còn tab, chuyển về tab cuối cùng trong danh sách
            //    const lastTab = tabsArray[tabsArray.length - 1];

            //    window.location.href = lastTab.href;
            //}
        }

    </script>
    <script>
        // Bổ sung một lớp chung cho tất cả các tab của View 1 để dễ dàng quản lý chúng
        const tabsInView1 = document.querySelectorAll(".tab-control.tab-view-1 .tab");

        // Xóa lớp active từ tất cả các tab
        tabsInView1.forEach(function (tab) {
            tab.classList.remove("active");
        });

        // Sự kiện khi tab được click
        document.addEventListener("click", function (event) {
            const clickedTab = event.target.closest(".tab-view-1");
            if (clickedTab) {
                // Xóa lớp active từ tất cả các tab trong View 1
                tabsInView1.forEach(function (tab) {
                    tab.classList.remove("active");
                });

                // Thêm lớp active cho tab được nhấp vào
                clickedTab.classList.add("active");
            }
        });

                                                    // ...
    </script>
</body>
</html>